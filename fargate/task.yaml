---
# Copyright 2019 widdix GmbH
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
AWSTemplateFormatVersion: '2010-09-09'
Description: 'Fargate: task that runs on a Fargate cluster based on fargate/cluster.yaml, derived from a cloudonaut.io template'
Metadata:
  'AWS::CloudFormation::Interface':
    ParameterGroups:
    - Label:
        default: 'Parent Stacks'
      Parameters:
      - ParentCloudMapStack
      - ParentCloudMapIngressStack
    - Label:
        default: 'Permission Parameters'
      Parameters:
      - PermissionsBoundary
    - Label:
        default: 'Task Parameters'
      Parameters:
      - TaskPolicies
      - TaskExecutionPolicies
      - ProxyImage
      - ProxyCommand
      - ProxyPort
      - ProxyEnvironment1Key
      - ProxyEnvironment1Value
      - ProxyEnvironment2Key
      - ProxyEnvironment2Value
      - ProxyEnvironment3Key
      - ProxyEnvironment3Value
      - AppRepositoryCredentialsARN
      - AppImage
      - AppCommand
      - AppPort
      - AppEnvironment1Key
      - AppEnvironment1Value
      - AppEnvironment2Key
      - AppEnvironment2Value
      - AppEnvironment3Key
      - AppEnvironment3Value
      - AppEnvironment4Key
      - AppEnvironment4Value
      - AppEnvironment5Key
      - AppEnvironment5Value
      - AppEnvironment6Key
      - AppEnvironment6Value
      - SidecarImage
      - SidecarCommand
      - SidecarPort
      - SidecarEnvironment1Key
      - SidecarEnvironment1Value
      - SidecarEnvironment2Key
      - SidecarEnvironment2Value
      - SidecarEnvironment3Key
      - SidecarEnvironment3Value
    - Label:
        default: 'Service Parameters'
      Parameters:
      - Cpu
      - Memory
      - LogsRetentionInDays
Parameters:
  ParentCloudMapStack:
    Description: 'Stack name of parent Cloud Map stack based on vpc/cloudmap-private.yaml template.'
    Type: String
    Default: ''
  ParentCloudMapIngressStack:
    Description: 'Stack name of parent client stack based on state/client-sg.yaml template.'
    Type: String
    Default: ''
  PermissionsBoundaryArn:
    Description: 'Optional ARN for a policy that will be used as the permission boundary for all roles created by this template.'
    Type: String
    Default: ''
  TaskPolicies:
    Description: 'Comma-delimited list of IAM managed policy ARNs to attach to the task IAM role'
    Type: String
    Default: ''
  TaskExecutionPolicies:
    Description: 'Comma-delimited list of IAM managed policy ARNs to attach to the task execution IAM role'
    Type: String
    Default: ''
  ProxyImage:
    Description: 'Optional Docker image to use for the proxy container. You can use images in the Docker Hub registry or specify other repositories (repository-url/image:tag).'
    Type: String
    Default: ''
  ProxyCommand:
    Description: 'Optional command used when starting the proxy container.'
    Type: String
    Default: ''
  ProxyPort:
    Description: 'The port exposed by the proxy container that receives traffic from the load balancer (ProxyPort <> AppPort <> SidecarPort; ignored if ProxyImage is not set).'
    Type: Number
    # zero is not a valid port and indicates no port was provided
    Default: 0
    MinValue: 0
    MaxValue: 49150
  ProxyEnvironment1Key:
    Description: 'Optional environment variable 1 key for proxy container.'
    Type: String
    Default: ''
  ProxyEnvironment1Value:
    Description: 'Optional environment variable 1 value for proxy container.'
    Type: String
    Default: ''
  ProxyEnvironment2Key:
    Description: 'Optional environment variable 2 key for proxy container.'
    Type: String
    Default: ''
  ProxyEnvironment2Value:
    Description: 'Optional environment variable 2 value for proxy container.'
    Type: String
    Default: ''
  ProxyEnvironment3Key:
    Description: 'Optional environment variable 3 key for proxy container.'
    Type: String
    Default: ''
  ProxyEnvironment3Value:
    Description: 'Optional environment variable 3 value for proxy container.'
    Type: String
    Default: ''
  AppRepositoryCredentialsARN:
    Description: 'The Amazon Resource Name (ARN) of the secret containing the private repository credentials.'
    Type: String
    Default: ''
  AppImage:
    Description: 'The Docker image to use for the app container. You can use images in the Docker Hub registry or specify other repositories (repository-url/image:tag).'
    Type: String
    Default: 'widdix/hello:v1'
  AppCommand:
    Description: 'Optional commands (comma-delimited) used when starting the app container.'
    Type: String
    Default: ''
  AppPort:
    Description: 'The port exposed by the app container that receives traffic from the load balancer or the proxy container (AppPort <> ProxyPort <> SidecarPort).'
    Type: Number
    # zero is not a valid port and indicates no port was provided
    Default: 0
    MinValue: 0
    MaxValue: 49150
  AppEnvironment1Key:
    Description: 'Optional environment variable 1 key for app container.'
    Type: String
    Default: ''
  AppEnvironment1Value:
    Description: 'Optional environment variable 1 value for app container.'
    Type: String
    Default: ''
  AppEnvironment2Key:
    Description: 'Optional environment variable 2 key for app container.'
    Type: String
    Default: ''
  AppEnvironment2Value:
    Description: 'Optional environment variable 2 value for app container.'
    Type: String
    Default: ''
  AppEnvironment3Key:
    Description: 'Optional environment variable 3 key for app container.'
    Type: String
    Default: ''
  AppEnvironment3Value:
    Description: 'Optional environment variable 3 value for app container.'
    Type: String
    Default: ''
  AppEnvironment4Key:
    Description: 'Optional environment variable 4 key for app container.'
    Type: String
    Default: ''
  AppEnvironment4Value:
    Description: 'Optional environment variable 4 plain-text value for app container.'
    Type: String
    Default: ''
  AppEnvironment5Key:
    Description: 'Optional environment variable 5 key for app container.'
    Type: String
    Default: ''
  AppEnvironment5Value:
    Description: 'Optional environment variable 5 plain-text value for app container.'
    Type: String
    Default: ''
  AppEnvironment6Key:
    Description: 'Optional environment variable 6 key for app container.'
    Type: String
    Default: ''
  AppEnvironment6Value:
    Description: 'Optional environment variable 6 plain-text value for app container.'
    Type: String
    Default: ''
  SidecarImage:
    Description: 'Optional Docker image to use for the sidecar container. You can use images in the Docker Hub registry or specify other repositories (repository-url/image:tag).'
    Type: String
    Default: ''
  SidecarCommand:
    Description: 'Optional command used when starting the sidecar container.'
    Type: String
    Default: ''
  SidecarPort:
    Description: 'The port exposed by the sidecar container reachable from the app container on host localhost (SidecarPort <> ProxyPort <> AppPort).'
    Type: Number
    # zero is not a valid port and indicates no port was provided
    Default: 0
    MinValue: 0
    MaxValue: 49150
  SidecarEnvironment1Key:
    Description: 'Optional environment variable 1 key for sidecar container.'
    Type: String
    Default: ''
  SidecarEnvironment1Value:
    Description: 'Optional environment variable 1 value for sidecar container.'
    Type: String
    Default: ''
  SidecarEnvironment2Key:
    Description: 'Optional environment variable 2 key for sidecar container.'
    Type: String
    Default: ''
  SidecarEnvironment2Value:
    Description: 'Optional environment variable 2 value for sidecar container.'
    Type: String
    Default: ''
  SidecarEnvironment3Key:
    Description: 'Optional environment variable 3 key for sidecar container.'
    Type: String
    Default: ''
  SidecarEnvironment3Value:
    Description: 'Optional environment variable 3 value for sidecar container.'
    Type: String
    Default: ''
  Cpu:
    Description: 'The minimum number of vCPUs to reserve for the container.'
    Type: String
    Default: '0.25'
    AllowedValues: ['0.25', '0.5', '1', '2', '4']
  Memory:
    Description: 'The amount (in GB) of memory used by the task.'
    Type: String
    Default: '0.5'
    AllowedValues: ['0.5', '1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '30']
  LogsRetentionInDays:
    Description: 'Specifies the number of days you want to retain log events in the specified log group.'
    Type: Number
    Default: 14
    AllowedValues: [1, 3, 5, 7, 14, 30, 60, 90, 120, 150, 180, 365, 400, 545, 731, 1827, 3653]
Mappings:
  CpuMap:
    '0.25':
      Cpu: 256
    '0.5':
      Cpu: 512
    '1':
      Cpu: 1024
    '2':
      Cpu: 2048
    '4':
      Cpu: 4096
  MemoryMap:
    '0.5':
      Memory: 512
    '1':
      Memory: 1024
    '2':
      Memory: 2048
    '3':
      Memory: 3072
    '4':
      Memory: 4096
    '5':
      Memory: 5120
    '6':
      Memory: 6144
    '7':
      Memory: 7168
    '8':
      Memory: 8192
    '9':
      Memory: 9216
    '10':
      Memory: 10240
    '11':
      Memory: 11264
    '12':
      Memory: 12288
    '13':
      Memory: 13312
    '14':
      Memory: 14336
    '15':
      Memory: 15360
    '16':
      Memory: 16384
    '17':
      Memory: 17408
    '18':
      Memory: 18432
    '19':
      Memory: 19456
    '20':
      Memory: 20480
    '21':
      Memory: 21504
    '22':
      Memory: 22528
    '23':
      Memory: 23552
    '24':
      Memory: 24576
    '25':
      Memory: 25600
    '26':
      Memory: 26624
    '27':
      Memory: 27648
    '28':
      Memory: 28672
    '29':
      Memory: 29696
    '30':
      Memory: 30720
Conditions:
  HasPermissionsBoundaryArn: !Not [!Equals [!Ref PermissionsBoundaryArn, '']]
  HasTaskPolicies: !Not [!Equals [!Ref TaskPolicies, '']]
  HasTaskExecutionPolicies: !Not [!Equals [!Ref TaskExecutionPolicies, '']]
  HasAppCommand: !Not [!Equals [!Ref AppCommand, '']]
  HasAppRepositoryCredentialsARN: !Not [!Equals [!Ref AppRepositoryCredentialsARN, '']]
  HasAppEnvironment1Key: !Not [!Equals [!Ref AppEnvironment1Key, '']]
  HasAppEnvironment2Key: !Not [!Equals [!Ref AppEnvironment2Key, '']]
  HasAppEnvironment3Key: !Not [!Equals [!Ref AppEnvironment3Key, '']]
  HasAppEnvironment4Key: !Not [!Equals [!Ref AppEnvironment4Key, '']]
  HasAppEnvironment5Key: !Not [!Equals [!Ref AppEnvironment5Key, '']]
  HasAppEnvironment6Key: !Not [!Equals [!Ref AppEnvironment6Key, '']]
  HasProxyImage: !Not [!Equals [!Ref ProxyImage, '']]
  HasProxyCommand: !Not [!Equals [!Ref ProxyCommand, '']]
  HasProxyEnvironment1Key: !Not [!Equals [!Ref ProxyEnvironment1Key, '']]
  HasProxyEnvironment2Key: !Not [!Equals [!Ref ProxyEnvironment2Key, '']]
  HasProxyEnvironment3Key: !Not [!Equals [!Ref ProxyEnvironment3Key, '']]
  HasSidecarImage: !Not [!Equals [!Ref SidecarImage, '']]
  HasSidecarCommand: !Not [!Equals [!Ref SidecarCommand, '']]
  HasSidecarEnvironment1Key: !Not [!Equals [!Ref SidecarEnvironment1Key, '']]
  HasSidecarEnvironment2Key: !Not [!Equals [!Ref SidecarEnvironment2Key, '']]
  HasSidecarEnvironment3Key: !Not [!Equals [!Ref SidecarEnvironment3Key, '']]
  HasAppPort: !Not [!Equals [!Ref AppPort, 0]]
  HasProxyPort: !And [!Condition HasProxyImage, !Not [!Equals [!Ref ProxyPort, 0]]]
  HasSidecarPort: !And [!Condition HasSidecarImage, !Not [!Equals [!Ref SidecarPort, 0]]]
Rules:
  CloudMapRequirements:
    RuleCondition: !Not [!Equals [!Ref ParentCloudMapStack, '']]
    Assertions:
    - AssertDescription: CloudMapName required if ParentCloudMapStack present
      Assert: !Not [!Equals [!Ref ParentCloudMapStack, '']]
    - AssertDescription: ParentCloudMapIngressStack required if ParentCloudMapStack present
      Assert: !Not [!Equals [!Ref ParentCloudMapIngressStack, '']]
Resources:
  # We have to have the option to generate here (vs. using a parameter) because the name is (currently) derived from the stack
  LogGroup:
    Type: 'AWS::Logs::LogGroup'
    Properties:
      RetentionInDays: !Ref LogsRetentionInDays
  TaskExecutionRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Effect: Allow
          Principal:
            Service: 'ecs-tasks.amazonaws.com'
          Action: 'sts:AssumeRole'
      PermissionsBoundary: !If [HasPermissionsBoundaryArn, !Ref PermissionsBoundaryArn, !Ref 'AWS::NoValue']
      Policies:
      - PolicyName: AmazonECSTaskExecutionRolePolicy # https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task_execution_IAM_role.html
        PolicyDocument:
          Statement:
          - Effect: Allow
            Action:
            - 'ecr:GetAuthorizationToken'
            - 'ecr:BatchCheckLayerAvailability'
            - 'ecr:GetDownloadUrlForLayer'
            - 'ecr:BatchGetImage'
            Resource: '*'
          - Effect: Allow
            Action:
            - 'logs:CreateLogStream'
            - 'logs:PutLogEvents'
            Resource: !GetAtt 'LogGroup.Arn'
      ManagedPolicyArns: !If [HasTaskExecutionPolicies, !Split [',', !Ref TaskExecutionPolicies], !Ref 'AWS::NoValue']
  TaskRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Effect: Allow
          Principal:
            Service: 'ecs-tasks.amazonaws.com'
          Action: 'sts:AssumeRole'
      ManagedPolicyArns: !If [HasTaskPolicies, !Split [',', !Ref TaskPolicies], !Ref 'AWS::NoValue']
      PermissionsBoundary: !If [HasPermissionsBoundaryArn, !Ref PermissionsBoundaryArn, !Ref 'AWS::NoValue']
  TaskDefinition:
    Type: 'AWS::ECS::TaskDefinition'
    Properties:
      ContainerDefinitions:
      - !If
        - HasProxyImage
        - Name: proxy
          Image: !Ref ProxyImage
          Command: !If [HasProxyCommand, !Ref ProxyCommand, !Ref 'AWS::NoValue']
          PortMappings:
          - !If
            - HasProxyPort
            - ContainerPort: !Ref ProxyPort
              Protocol: tcp
            - !Ref 'AWS::NoValue'
          Essential: true
          LogConfiguration:
            LogDriver: awslogs
            Options:
              'awslogs-region': !Ref 'AWS::Region'
              'awslogs-group': !Ref LogGroup
              'awslogs-stream-prefix': proxy
          Environment:
          - !If [HasProxyEnvironment1Key, {Name: !Ref ProxyEnvironment1Key, Value: !Ref ProxyEnvironment1Value}, !Ref 'AWS::NoValue']
          - !If [HasProxyEnvironment2Key, {Name: !Ref ProxyEnvironment2Key, Value: !Ref ProxyEnvironment2Value}, !Ref 'AWS::NoValue']
          - !If [HasProxyEnvironment3Key, {Name: !Ref ProxyEnvironment3Key, Value: !Ref ProxyEnvironment3Value}, !Ref 'AWS::NoValue']
        - !Ref 'AWS::NoValue'
      - Name: app
        Image: !Ref AppImage
        Command: !If [HasAppCommand, !Split [',', !Ref AppCommand], !Ref 'AWS::NoValue']
        RepositoryCredentials: !If [HasAppRepositoryCredentialsARN, {CredentialsParameter: !Ref AppRepositoryCredentialsARN}, !Ref 'AWS::NoValue']
        PortMappings:
        - !If
          - HasAppPort
          - ContainerPort: !Ref AppPort
            Protocol: tcp
          - !Ref 'AWS::NoValue'
        Essential: true
        LogConfiguration:
          LogDriver: awslogs
          Options:
            'awslogs-region': !Ref 'AWS::Region'
            'awslogs-group': !Ref LogGroup
            'awslogs-stream-prefix': app
        Environment:
        - !If [HasAppEnvironment1Key, {Name: !Ref AppEnvironment1Key, Value: !Ref AppEnvironment1Value}, !Ref 'AWS::NoValue']
        - !If [HasAppEnvironment2Key, {Name: !Ref AppEnvironment2Key, Value: !Ref AppEnvironment2Value}, !Ref 'AWS::NoValue']
        - !If [HasAppEnvironment3Key, {Name: !Ref AppEnvironment3Key, Value: !Ref AppEnvironment3Value}, !Ref 'AWS::NoValue']
        - !If [HasAppEnvironment4Key, {Name: !Ref AppEnvironment4Key, Value: !Ref AppEnvironment4Value}, !Ref 'AWS::NoValue']
        - !If [HasAppEnvironment5Key, {Name: !Ref AppEnvironment5Key, Value: !Ref AppEnvironment5Value}, !Ref 'AWS::NoValue']
        - !If [HasAppEnvironment6Key, {Name: !Ref AppEnvironment6Key, Value: !Ref AppEnvironment6Value}, !Ref 'AWS::NoValue']
      - !If
        - HasSidecarImage
        - Name: sidecar
          Image: !Ref SidecarImage
          Command: !If [HasSidecarCommand, !Ref SidecarCommand, !Ref 'AWS::NoValue']
          PortMappings:
          - !If
            - HasSidecarPort
            - ContainerPort: !Ref SidecarPort
              Protocol: tcp
            - !Ref 'AWS::NoValue'
          Essential: true
          LogConfiguration:
            LogDriver: awslogs
            Options:
              'awslogs-region': !Ref 'AWS::Region'
              'awslogs-group': !Ref LogGroup
              'awslogs-stream-prefix': sidecar
          Environment:
          - !If [HasSidecarEnvironment1Key, {Name: !Ref SidecarEnvironment1Key, Value: !Ref SidecarEnvironment1Value}, !Ref 'AWS::NoValue']
          - !If [HasSidecarEnvironment2Key, {Name: !Ref SidecarEnvironment2Key, Value: !Ref SidecarEnvironment2Value}, !Ref 'AWS::NoValue']
          - !If [HasSidecarEnvironment3Key, {Name: !Ref SidecarEnvironment3Key, Value: !Ref SidecarEnvironment3Value}, !Ref 'AWS::NoValue']
        - !Ref 'AWS::NoValue'
      Cpu: !FindInMap [CpuMap, !Ref Cpu, Cpu]
      ExecutionRoleArn: !GetAtt 'TaskExecutionRole.Arn'
      Family: !Ref 'AWS::StackName'
      Memory: !FindInMap [MemoryMap, !Ref Memory, Memory]
      NetworkMode: awsvpc
      RequiresCompatibilities: [FARGATE]
      TaskRoleArn: !GetAtt 'TaskRole.Arn'
Outputs:
  TemplateID:
    Description: 'cloudonaut.io template id.'
    Value: 'fargate/task'
  TemplateVersion:
    Description: 'cloudonaut.io template version.'
    Value: '__VERSION__'
  StackName:
    Description: 'Stack name.'
    Value: !Sub '${AWS::StackName}'
  LogGroup:
    Description: 'LogGroup'
    Value: !Ref LogGroup
  TaskARN:
    Description: 'ARN for task'
    Value: !Ref TaskDefinition
    Export:
      Name: !Sub '${AWS::StackName}-TaskARN'
  TaskExecutionRoleArn:
    Description: 'ARN for TaskExecutionRole'
    Value: !GetAtt 'TaskExecutionRole.Arn'
    Export:
      Name: !Sub '${AWS::StackName}-TaskExecutionRoleARN'
  TaskRoleArn:
    Description: 'ARN for TaskRole'
    Value: !GetAtt 'TaskRole.Arn'
    Export:
      Name: !Sub '${AWS::StackName}-TaskRoleARN'
